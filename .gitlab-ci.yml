default:
  image: node:18-alpine

stages:
  - build
  - deploy

variables:
  DEPLOY_NOTIFICATION_ENDPOINT: "https://n0l5yvafvi.execute-api.us-east-1.amazonaws.com/default/deploy-notifications"
  DEPLOY_NOTIFICATION_RECIPIENTS: till@tillcarlos.com
  REMOTE_HOST: 49.13.236.191


.notification_script: &notification_script
  - ./bin/generate_build_info.sh > BUILD_INFO.json
  - apk add jq # TODO: This should go into the deployer image!
  - "jq '. + {token: \"'$DEPLOY_NOTIFICATION_TOKEN'\"}' BUILD_INFO.json > tmp.json && mv tmp.json BUILD_INFO.json"
  - >
    curl -X POST $DEPLOY_NOTIFICATION_ENDPOINT
    -H "Content-Type: application/json"
    -d @BUILD_INFO.json

# Stage 2: Build the Next.js project
build_project:
  stage: build
  image: node:18-alpine
  script:
    - npm install
    - npm run build


.deploy_script: &deploy_script
  # This includes kamal, dotenv, docker
  image: tillcarlos/kamal-deployer:latest
  tags:
    - product-deployer
  before_script:
    - uname -m
    - docker info
    - git rev-parse HEAD # Optional check to verify repository presence
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[ -z "$SSH_PRIVATE_KEY_BASE64" ] && { echo "Error: SSH_PRIVATE_KEY_BASE64 is empty."; exit 1; }'
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan $REMOTE_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - docker version
    - kamal version
    - echo "$PRODUCTION_KAMAL_SECRETS" > .env
    - echo "BUILD_INFO='$(./bin/generate_build_info.sh)'" >> .env
    - 'echo "${RAILS_ENV}:${RAILS_MASTER_KEY:0:3} <-- R.ENV R._MASTER_KEY"'
    - dotenv kamal deploy 
    - echo 'Kamal deploy done.'
    - *notification_script

production_deploy:
  <<: *deploy_script
  stage: deploy
  environment: production
  variables:
    REMOTE_HOST: 49.13.236.191
    RAILS_ENV: production
  only:
    - main
  when: manual
